{"version":3,"sources":["Components/Navbar.js","Components/MediaCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","Navbar","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","className","clsx","role","onClick","onKeyDown","List","ListItem","button","handleListClick","ListItemText","primary","console","log","Box","component","position","style","maxWidth","margin","AppBar","background","Toolbar","map","Fragment","Button","color","Menu","marginTop","marginLeft","fontSize","Drawer","onClose","root","media","height","MediaCard","props","id","cardID","Card","backgroundColor","padding","CardContent","Typography","gutterBottom","variant","cardTitle","cardQuote","CardMedia","image","imageSource","cardDescription","children","App","opacity","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc8d3203.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n    Box\r\n} from \"@material-ui/core\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Menu } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n      top: false,\r\n      left: false,\r\n      bottom: false,\r\n      right: false,\r\n    });\r\n  \r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n      }\r\n  \r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n  \r\n    const list = (anchor) => (\r\n      <div\r\n        className={clsx(classes.list, {\r\n          [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n        })}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer(anchor, false)}\r\n        onKeyDown={toggleDrawer(anchor, false)}\r\n      >\r\n        <List>\r\n         \r\n            <ListItem button key=\"My Life\" onClick={handleListClick}>\r\n              <ListItemText primary=\"My Life\"/>\r\n            </ListItem>\r\n\r\n            <ListItem button key=\"My work\" onClick={handleListClick}>\r\n              <ListItemText primary=\"My work\"/>\r\n            </ListItem>\r\n\r\n            <ListItem button key=\"Education\" onClick={handleListClick}>\r\n              <ListItemText primary=\"Education\"/>\r\n            </ListItem>\r\n\r\n            <ListItem button key=\"Experience\" onClick={handleListClick}>\r\n              <ListItemText primary=\"Experience\"/>\r\n            </ListItem>\r\n\r\n            <ListItem button key=\"Hobbies\" onClick={handleListClick}>\r\n              <ListItemText primary=\"Hobbies\"/>\r\n            </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n\r\n    function handleListClick(){\r\n        console.log(\"A\");\r\n    }\r\n\r\n\treturn(\r\n        <>\r\n\t\t<Box component=\"nav\" position=\"static\" style = {{maxWidth: 750, margin: \"auto\"}}>\r\n\t\t\t<AppBar position=\"static\"\r\n                style={{ background: '#2E3B55' }\r\n                }\r\n            >\r\n\t\t\t  <Toolbar style ={{margin: \"auto\"}}>\r\n              <div>\r\n                {['left'].map((anchor) => (\r\n                    <React.Fragment key=\"left\">\r\n                    <Button onClick={toggleDrawer(anchor, true)}><h2 style ={{color: \"#dfe3ee\"}}>Open menu</h2><Menu style={{ color: \"#dfe3ee\", marginTop:\"-10px\", marginLeft: \"5px\"}} fontSize=\"large\"/></Button>\r\n                    <Drawer anchor=\"left\" open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                        {list(anchor)}\r\n                    </Drawer>\r\n                    </React.Fragment>\r\n                ))}\r\n                </div>\r\n\t\t\t  </Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</Box>\r\n        </>\r\n\t\t);\r\n}\r\nexport default Navbar;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 750\r\n  },\r\n  media: {\r\n    height: 300\r\n  }\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const myStyle = {\r\n    backgroundColor: \"#dfe3ee\", \r\n    margin: \"auto\", \r\n    marginTop: \"20px\", \r\n    padding: \"0px 5px\"\r\n  }\r\n\r\n  return (\r\n    <div id = {(props.cardID || \"\")}>\r\n    <Card className={classes.root} style={myStyle}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n            { (props.cardTitle || \"The title could not be loaded\")}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"p\" component=\"p\" className = \"quote\">\r\n            { (props.cardQuote || \"I like cats\")}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image= {(props.imageSource || \"https://i.imgur.com/YcengQl.jpg\" )}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"p\" component=\"p\">\r\n          { (props.cardDescription || \"The description could not be loaded\")}\r\n          </Typography>\r\n          {props.children}\r\n        </CardContent>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Navbar from \"./Components/Navbar\"\r\nimport MediaCard from \"./Components/MediaCard\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <div className =\"container\">\r\n      <Navbar></Navbar>\r\n      \r\n      <MediaCard cardTitle = \"Hello! I am César Vega.\"\r\n      cardQuote = \" “Never take life seriously. Nobody gets out alive anyway.” — Elbert Hubbard \"\r\n      cardDescription = \"I am a software engineer!\"\r\n      >\r\n      <p style= {{opacity: 0, marginTop: \"-25px\"}}>.</p> \r\n      <a href=\"mailto:mailforksqgithubpagescontact@mailinator.com\"><h5>Contact me!</h5></a>\r\n      \r\n      </MediaCard>\r\n      <MediaCard></MediaCard>\r\n      <MediaCard></MediaCard>\r\n      <MediaCard></MediaCard>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}