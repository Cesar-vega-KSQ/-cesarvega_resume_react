{"version":3,"sources":["logo.svg","Components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","Navbar","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","className","clsx","role","onClick","onKeyDown","List","ListItem","button","ListItemText","primary","Box","component","position","AppBar","style","background","Toolbar","margin","map","Fragment","Button","color","Menu","fontSize","Drawer","onClose","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,oHCiBTA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,KAETC,SAAU,CACRD,MAAO,UAiEIE,EA3DA,WACX,IAAMC,EAAUN,IADC,EAESO,IAAMC,SAAS,CACvCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IANQ,mBAEVC,EAFU,KAEHC,EAFG,KASXC,EAAe,SAACC,EAAQC,GAAT,OAAkB,SAACC,IACnB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAI9DN,EAAS,2BAAKD,GAAN,kBAAcG,EAASC,OAG3Bf,EAAO,SAACc,GAAD,OACX,qBACEK,UAAWC,YAAKhB,EAAQJ,KAAT,eACZI,EAAQF,SAAsB,QAAXY,GAA+B,WAAXA,IAE1CO,KAAK,eACLC,QAAST,EAAaC,GAAQ,GAC9BS,UAAWV,EAAaC,GAAQ,GANlC,SAQE,cAACU,EAAA,EAAD,UAEI,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcC,QAAQ,aADH,gBAOhC,OACO,mCACN,cAACC,EAAA,EAAD,CAAKC,UAAU,MAAMC,SAAS,SAA9B,SACC,cAACC,EAAA,EAAD,CAAQD,SAAS,SACJE,MAAO,CAAEC,WAAY,WADlC,SAIE,cAACC,EAAA,EAAD,CAASF,MAAQ,CAACG,OAAQ,QAA1B,SACS,8BACG,CAAC,QAAQC,KAAI,SAACvB,GAAD,OACV,eAAC,IAAMwB,SAAP,WACA,eAACC,EAAA,EAAD,CAAQjB,QAAST,EAAaC,GAAQ,GAAtC,UAA6C,oBAAImB,MAAQ,CAACO,MAAO,WAApB,uBAA8C,cAACC,EAAA,EAAD,CAAMR,MAAO,CAAEO,MAAO,WAAYE,SAAS,aACtI,cAACC,EAAA,EAAD,CAAQ7B,OAAO,OAAOC,KAAMJ,EAAMG,GAAS8B,QAAS/B,EAAaC,GAAQ,GAAzE,SACKd,EAAKc,OAHU,sBC7DzB+B,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4497cf55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React from \"react\";\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n    Box\r\n} from \"@material-ui/core\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Menu } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n      top: false,\r\n      left: false,\r\n      bottom: false,\r\n      right: false,\r\n    });\r\n  \r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n      }\r\n  \r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n  \r\n    const list = (anchor) => (\r\n      <div\r\n        className={clsx(classes.list, {\r\n          [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n        })}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer(anchor, false)}\r\n        onKeyDown={toggleDrawer(anchor, false)}\r\n      >\r\n        <List>\r\n         \r\n            <ListItem button key=\"My Life\">\r\n              <ListItemText primary=\"My Life\"/>\r\n            </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n\treturn(\r\n        <>\r\n\t\t<Box component=\"nav\" position=\"static\">\r\n\t\t\t<AppBar position=\"static\"\r\n                style={{ background: '#2E3B55' }\r\n                }\r\n            >\r\n\t\t\t  <Toolbar style ={{margin: \"auto\"}}>\r\n              <div>\r\n                {['left'].map((anchor) => (\r\n                    <React.Fragment key=\"left\">\r\n                    <Button onClick={toggleDrawer(anchor, true)}><h2 style ={{color: \"#dfe3ee\"}}>Open menu</h2><Menu style={{ color: \"#dfe3ee\"}} fontSize=\"large\"/></Button>\r\n                    <Drawer anchor=\"left\" open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                        {list(anchor)}\r\n                    </Drawer>\r\n                    </React.Fragment>\r\n                ))}\r\n                </div>\r\n\t\t\t  </Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</Box>\r\n        </>\r\n\t\t);\r\n}\r\nexport default Navbar;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from \"./Components/Navbar.js\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Navbar></Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}